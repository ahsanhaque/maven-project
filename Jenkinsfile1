pipeline {
environment { 
3
        registry = "ahsanhaque/jenkinsdockerimage" 
4
        registryCredential = 'dockerhub_id' 
5
        dockerImage = '' 
6
    }
agent any
def app

stages
{

stage('cloning code')

{

steps

{//git 'https://github.com/chaitanyapratap19/maven-project.git'
	git branch: 'mynewwbranch', url: 'https://github.com/ahsanhaque/maven-project.git'

}
}

stage('compile my project')
{
steps
{
withMaven(jdk: 'JAVA_HOME', maven: 'MAVEN_HOME') {
    sh 'mvn compile'
	//println 'added println'
}}}
    
stage('test my project')
{
steps
{
withMaven(jdk: 'JAVA_HOME', maven: 'MAVEN_HOME') {
    sh 'echo "testing"'
}}}
    
stage('package my project')
{
steps
{
withMaven(jdk: 'JAVA_HOME', maven: 'MAVEN_HOME') {
    sh 'mvn package'
}}}
    

    
        
stage('package my install')
{
steps
{
withMaven(jdk: 'JAVA_HOME', maven: 'MAVEN_HOME') {
    sh 'mvn install'
}}}
	
   stage('Building Image') { 
15
            steps { 
16
                script { 
17
                    dockerImage = docker.build registry + ":$BUILD_NUMBER" 
18
                }
19
            } 
20
        }
21
        stage('Push Image') { 
22
            steps { 
23
                script { 
24
                    docker.withRegistry( '', registryCredential ) { 
25
                        dockerImage.push() 
26
                    }
27
                } 
28
            }
29
        } 
30
        stage('Cleaning up Local Image') { 
31
            steps { 
32
                sh "docker rmi $registry:$BUILD_NUMBER" 
33
            }
34
        } 
	
	
stage('deploy to  tomcat')
{
steps
{
    sshagent(['tomcat']) {
	 sh 'scp -o StrictHostKeyChecking=no */target/*.war ec2-user@172.31.0.90:/var/lib/tomcat/webapps'
						}
}
}
    
    
    

}
}
